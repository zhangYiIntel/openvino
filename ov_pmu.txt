##################################################################################
# following configs are almost unchanged over many x86 platforms

FP_ARITH_INST_RETIRED.SCALAR_SINGLE = 0x2c7;
FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE = 0x8c7;
FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE = 0x20c7;
FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE = 0x80c7;

MEM_LOAD_RETIRED.L1_MISS = 0x8d1;
MEM_LOAD_RETIRED.L2_MISS = 0x10d1;
MEM_LOAD_RETIRED.ALL_LOADS = 0x81d0;

config_fp_amx_bf16 = 0x2ce;
CPU_CLK_UNHALTED.THREAD = 0x3c;
CYCLE_ACTIVITY.STALLS_TOTAL = 0x40004a3;
MEMORY_ACTIVITY.STALLS_L2_MISS = 0x5000547;

### Counts cycles where the Store Buffer was full and no loads caused an execution stall
EXE_ACTIVITY.BOUND_ON_STORES = 0x20040a6;

### Execution stalls while memory subsystem has an outstanding load
EXE_ACTIVITY.BOUND_ON_LOADS = 0x50021a6;

### Counts cycles during which a total of 0/1/2/3/4 uops were executed on all ports and Reservation Station (RS) was not empty.
EXE_ACTIVITY.EXE_BOUND_0_PORTS = 0x80a6;
EXE_ACTIVITY.1_PORTS_UTIL = 0x2a6;
EXE_ACTIVITY.2_PORTS_UTIL = 0x4a6;
EXE_ACTIVITY.3_PORTS_UTIL = 0x8a6;
EXE_ACTIVITY.4_PORTS_UTIL = 0x10a6;

HW_CACHE.LLC_loads = 0x2;
HW_CACHE.LLC_load_misses = 0x10002;

##################################################################################
# delta time (seconds)
dt = duration();

clk = pmu(CPU_CLK_UNHALTED.THREAD);

# 4 instructions per cycle
TRACE.FP_AVX512_Inst_PerCycle = pmu(FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE) / clk;

# cpu clock cycles (GHz)
TRACE.CPU_Freq = clk * 1e-9 / dt;

# Stalls (%)
# TRACE.Stalls = pmu(CYCLE_ACTIVITY.STALLS_TOTAL) * 100 / clk;

# L1miss (%)
#TRACE.L1Miss = pmu(MEM_LOAD_RETIRED.L1_MISS) * 100 /pmu(MEM_LOAD_RETIRED.ALL_LOADS);

# L2miss (%)
#TRACE.L2Miss = pmu(MEM_LOAD_RETIRED.L2_MISS) * 100 /pmu(MEM_LOAD_RETIRED.ALL_LOADS);

# MemLoadBW (GB/s)
# TRACE.MemLoadBW = pmu(MEM_LOAD_RETIRED.ALL_LOADS) * 64 * 1e-9 / dt;

#TRACE.StoresBound = pmu(EXE_ACTIVITY.BOUND_ON_STORES) * 100 / clk;
#TRACE.LoadsBound = pmu(EXE_ACTIVITY.BOUND_ON_LOADS) * 100 / clk;

#TRACE.PortUtil0 = pmu(EXE_ACTIVITY.EXE_BOUND_0_PORTS) * 100 / clk;
#TRACE.PortUtil1 = pmu(EXE_ACTIVITY.1_PORTS_UTIL) * 100 / clk;
#TRACE.PortUtil2 = pmu(EXE_ACTIVITY.2_PORTS_UTIL) * 100 / clk;
#TRACE.PortUtil3 = pmu(EXE_ACTIVITY.3_PORTS_UTIL) * 100 / clk;
#TRACE.PortUtil4 = pmu(EXE_ACTIVITY.4_PORTS_UTIL) * 100 / clk;

# LLC cache miss rate
TRACE.LLC_Miss = perf_type_hw_cache(HW_CACHE.LLC_load_misses) *100 / (perf_type_hw_cache(HW_CACHE.LLC_loads) + 1);
