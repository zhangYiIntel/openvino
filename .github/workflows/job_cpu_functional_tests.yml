name: CPU functional tests

on:
  workflow_call:
    inputs:
      runner:
        description: 'Machine on which the tests would run'
        type: string
        required: true
      image:
        description: 'Docker image in which the tests would run'
        type: string
        required: false
        default: null

permissions: read-all

jobs:
  CPU_Functional_Tests:
    name: CPU functional tests
    timeout-minutes: 30
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.image }}
    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive # to prevent apt-get from waiting user input
      INSTALL_DIR: ${{ github.workspace }}/install
      INSTALL_TEST_DIR: ${{ github.workspace }}/install/tests
      PARALLEL_TEST_SCRIPT: ${{ github.workspace }}/install/tests/functional_test_utils/layer_tests_summary/run_parallel.py
      PARALLEL_TEST_CACHE: ${{ github.workspace }}/install/tests/test_cache.lst
    steps:
      - name: Download OpenVINO package
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: openvino_package
          path: ${{ env.INSTALL_DIR }}

      - name: Download OpenVINO tests package
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: openvino_tests
          path: ${{ env.INSTALL_TEST_DIR }}

      # Needed as ${{ github.workspace }} is not working correctly when using Docker
      - name: Setup Variables
        run: |
          echo "INSTALL_DIR=$GITHUB_WORKSPACE/install" >> "$GITHUB_ENV"
          echo "INSTALL_TEST_DIR=$GITHUB_WORKSPACE/install/tests" >> "$GITHUB_ENV"
          echo "PARALLEL_TEST_SCRIPT=$GITHUB_WORKSPACE/install/tests/functional_test_utils/layer_tests_summary/run_parallel.py" >> "$GITHUB_ENV"
          echo "PARALLEL_TEST_CACHE=$GITHUB_WORKSPACE/install/tests/test_cache.lst" >> "$GITHUB_ENV"

      - name: Extract OpenVINO packages
        run: |
          pushd $INSTALL_DIR
            tar -xzf openvino_package.tar.gz -C $INSTALL_DIR
          popd

          pushd $INSTALL_TEST_DIR
            tar -xzf openvino_tests.tar.gz -C $INSTALL_DIR
          popd

      - name: Fetch setup_python action
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          sparse-checkout: |
            .github/actions/setup_python/action.yml
          sparse-checkout-cone-mode: false
          path: 'openvino'

      - name: Setup Python 3.11
        uses: ./openvino/.github/actions/setup_python
        with:
          version: '3.11'
          should-setup-pip-paths: 'false'
          self-hosted-runner: ${{ runner.os == 'Linux' }}

      - name: Install python dependencies for run_parallel.py
        run: python3 -m pip install -r ${INSTALL_TEST_DIR}/functional_test_utils/layer_tests_summary/requirements.txt

      - name: Restore tests execution time
        uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ env.PARALLEL_TEST_CACHE }}
          key: ${{ runner.os }}-${{ runner.arch }}-tests-functional-cpu-stamp-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-tests-functional-cpu-stamp

      - name: Intel CPU plugin func tests (parallel)
        run: |
          # Needed as the Linux CC does not require setupvars to work
          if [[ -f "${INSTALL_DIR}/setupvars.sh" ]]; then
            source ${INSTALL_DIR}/setupvars.sh
          fi
          # Needed as ze_loader.so is under INSTALL_TEST_DIR
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${INSTALL_TEST_DIR}

          python3 ${PARALLEL_TEST_SCRIPT} -e ${INSTALL_TEST_DIR}/ov_cpu_func_tests -c ${PARALLEL_TEST_CACHE} -w ${INSTALL_TEST_DIR} -s suite -rf 0 -- --gtest_print_time=1 --gtest_filter=*smoke*
        timeout-minutes: 25

      - name: Save tests execution time
        uses: actions/cache/save@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        if: github.ref_name == 'master'
        with:
          path: ${{ env.PARALLEL_TEST_CACHE }}
          key: ${{ runner.os }}-${{ runner.arch }}-tests-functional-cpu-stamp-${{ github.sha }}

      - name: Upload Test Results
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        if: always()
        with:
          name: test-results-functional-cpu
          path: |
            ${{ env.INSTALL_TEST_DIR }}/temp/*.log
            ${{ env.INSTALL_TEST_DIR }}/logs/*.log
            ${{ env.INSTALL_TEST_DIR }}/logs/failed/*.log
            ${{ env.INSTALL_TEST_DIR }}/logs/crashed/*.log
            ${{ env.INSTALL_TEST_DIR }}/logs/hanged/*.log
            ${{ env.INSTALL_TEST_DIR }}/logs/interapted/*.log
            ${{ env.INSTALL_TEST_DIR }}/logs/hash_table.csv
            ${{ env.PARALLEL_TEST_CACHE }}
          if-no-files-found: 'error'
